version: "3.9"

services:
  backend:
    build:
      dockerfile: Dockerfile
      context: ./backend
    volumes:
      - /app/node_modules
      - ./package.json:/app/package.json
      - ./backend:/app
    env_file:
      - ./backend.env
    image: node
    ports:
      - "5005:5005"
    environment:
      - PG_DB=${PG_DB}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_HOST=${PG_HOST}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
    networks: 
      - node-network
    tty: true
  
  frontend:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile
      context: ./frontend
    volumes:
      - /app/node_modules
      - ./frontend:/app
    # ports:
    #   - "3000:5173"
    tty: true
    networks: 
      - node-network

  postgres:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=chat_app_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    user: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: 
      - node-network

  nginx:
    depends_on:
      - backend
      - frontend
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3051:80"
      # - "443:443"
    volumes:
      - ./nginx/build:/usr/share/nginx/html
    networks: 
      - node-network

volumes:
  postgres_data: {}

networks: 
  node-network:
    driver: bridge